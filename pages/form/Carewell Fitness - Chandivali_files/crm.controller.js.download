var allPackage = [];
var userSelectedPackage = {};
var selectedSubVariant = {};
var selectedVariant = {};
var orderId = '';
var selectedStartDate = '';
var selectedEndDate = '';

var staticsite = angular.module('bygapp', ['ngMap', 'ngTouch', 'bootstrapLightbox','ui.bootstrap']);
staticsite.controller('appCtrl', ['$scope', '$http', 'Lightbox', '$uibModal','$window', 
  function($scope, $http, Lightbox, $uibModal, $window) {
    var sc = $scope;
    sc.address = window.address;
    sc.lat = window.lat;
    sc.lng = window.lng;
    sc.registrationForm = {
      'name'     : '',
      'email'      : '',
      'phone'     :'',
      'message'   :''
    };
    sc.originForm = angular.copy(sc.registrationForm);
    sc.resetForm = function(){
      sc.registrationForm = angular.copy(sc.originForm);
      //sc.registrForm.$setPristine(); // this line will update status of your form, but will not clean your data, where `registrForm` - name of form.
    };
    // scope.openLightboxModal = function(index) {
    //   Lightbox.openModal(scope.gallery, index);
    // };
    sc.saveEnquiry = function() {
      if (!!sc.registrationForm.name && !!sc.registrationForm.email && !!sc.registrationForm.email && !!sc.registrationForm.message) {
          var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

          if (!filter.test(sc.registrationForm.email))
              alert('Please provide a valid email address');
          else {
              $http.post('/contactus?center=' + window.centerId, sc.registrationForm).then(function(res) {
                if (res.status == 200) {
                    alert("Thank you! Your message has been successfully sent. We will contact you very soon!");
                    sc.resetForm();
                }
              }, function(err) {
                  alert(err.data.err || "Something went wrong");
              })
          }
      } else {
          alert("Kindly fill all the required fields");
      }
    }
  }
]);

var scrollLeft = function() {
  var leftPos = $('#gallery').scrollLeft();
  $("#gallery").animate({ scrollLeft: leftPos - 200 }, 800);
}

var scrollRight = function() {
  var leftPos = $('#gallery').scrollLeft();
  $("#gallery").animate({ scrollLeft: leftPos + 200 }, 800);
}

function findSelectedPackage(packageId) {
  for (var i = allPackages.length - 1; i >= 0; i--) {
    if (allPackages[i].id == packageId) {
      return allPackages[i];
    }
  }
  return null;
}

function getPrice(package, variantId, subVariantId) {
  var variants = [];
  if (package.duration) {
    for (var i = package.duration.length - 1; i >= 0; i--) {
      if (package.duration[i].id === variantId) {
        variants = package.duration[i].variants;
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i].taxedPrice;
      }
    }
  }
  if (package.sessions) {
    for (var i = package.sessions.length - 1; i >= 0; i--) {
      if (package.sessions[i].id === variantId) {
        variants = package.sessions[i].variants
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i].taxedPrice;
      }
    }
  }
  return null;
}

function getSubVariant(package, variantId, subVariantId) {
  if (package.duration) {
    for (var i = package.duration.length - 1; i >= 0; i--) {
      if (package.duration[i].id === variantId) {
        variants = package.duration[i].variants;
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  if (package.sessions) {
    for (var i = package.sessions.length - 1; i >= 0; i--) {
      if (package.sessions[i].id === variantId) {
        variants = package.sessions[i].variants
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  if (package.batch) {
    for (var i = package.batch.length - 1; i >= 0; i--) {
      if (package.batch[i].id === variantId) {
        variants = package.batch[i].variants
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  return null;
}

function getVariant(package, variantId) {
  if (package.duration) {
    for (var i = package.duration.length - 1; i >= 0; i--) {
      if (package.duration[i].id === variantId) {
        variants = package.duration[i].variants;
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  if (package.sessions) {
    for (var i = package.sessions.length - 1; i >= 0; i--) {
      if (package.sessions[i].id === variantId) {
        variants = package.sessions[i].variants
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  if (package.batch) {
    for (var i = package.batch.length - 1; i >= 0; i--) {
      if (package.batch[i].id === variantId) {
        variants = package.batch[i].variants
        break;
      }
    }
    for (var i = variants.length - 1; i >= 0; i--) {
      if (variants[i].id === subVariantId) {
        return variants[i];
      }
    }
  }
  return null;
}

function onVariantChange(varSel) {
  var packageId = $(varSel).attr('data-package-id');
  var variantId = varSel.value;
  var selectedPackage = null;
  var variants = [];
  for (var i = allPackages.length - 1; i >= 0; i--) {
    if (allPackages[i].id == packageId) {
      selectedPackage = allPackages[i];
      break;
    }
  }
  if (selectedPackage !== null) {
    if (selectedPackage.duration) {
      for (var i = selectedPackage.duration.length - 1; i >= 0; i--) {
        if (selectedPackage.duration[i].id === variantId) {
          variants = selectedPackage.duration[i].variants;
          break;
        }
      }
      var $el = $('#subvariant-' + packageId);
      $el.empty();
      $el.html(' ');
      for (var i = variants.length - 1; i >= 0; i--) {
        let str = variants[i].duration.value + ' ' + variants[i].duration.unit + ' @ Rs. ' + variants[i].taxedPrice;
        $el.append($("<option></option>")
          .attr('value', variants[i].id)
          .attr('data-subvariant-id', variants[i].id)
          .attr('data-variant-id', variantId)
          .attr('data-dislay', str)
          .text(str));
      }
      $el.trigger('change');
      var priceEl = $('#price-' + packageId)
      priceEl.html('Rs. ' + variants[variants.length - 1].taxedPrice);
    }
    if (selectedPackage.sessions) {
      for (var i = selectedPackage.sessions.length - 1; i >= 0; i--) {
        if (selectedPackage.sessions[i].id === variantId) {
          variants = selectedPackage.sessions[i].variants
          break;
        }
      }
      var $el = $('#subvariant-' + packageId);
      $el.empty();
      $el.html(' ');
      for (var i = variants.length - 1; i >= 0; i--) {
        let str = variants[i].classesCount + ' Sessions for ' + variants[i].duration.value + ' ' + variants[i].duration.unit + ' @ Rs. ' + variants[i].taxedPrice;
        $el.append($("<option></option>")
          .attr('value', variants[i].id)
          .attr('data-subvariant-id', variants[i].id)
          .attr('data-variant-id', variantId)
          .attr('data-dislay', str)
          .text(str));
      }
      $el.trigger('change');
      var priceEl = $('#price-' + packageId)
      priceEl.html('Rs. ' + variants[variants.length - 1].taxedPrice);
    }
    if (selectedPackage.batch) {
      for (var i = selectedPackage.batch.length - 1; i >= 0; i--) {
        if (selectedPackage.batch[i].id === variantId) {
          variants = selectedPackage.batch[i].variants
          break;
        }
      }
      var $el = $('#subvariant-' + packageId);
      $el.empty();
      $el.html(' ');
      for (var i = variants.length - 1; i >= 0; i--) {
        const startDate = moment.unix(variants[i].startDate / 1000).utcOffset(330).format('LL');
        const endDate = moment.unix(variants[i].endDate / 1000).utcOffset(330).format('LL');
        let str = (variants[i].name ? (variants[i].name + ' Starting from ') : '')  +  startDate + ' to ' + endDate + ' @ Rs. ' + variants[i].taxedPrice;
        $el.append($("<option></option>")
          .attr('value', variants[i].id)
          .attr('data-subvariant-id', variants[i].id)
          .attr('data-variant-id', variantId)
          .attr('data-dislay', str)
          .text(str));
      }
      $el.trigger('change');
      var priceEl = $('#price-' + packageId)
      priceEl.html('Rs. ' + variants[variants.length - 1].taxedPrice);
    }
  }
}

function onSubvariantChange(subVarSel) {
  var packageId = $(subVarSel).attr('data-package-id');
  var subVariantId =  subVarSel.value;
  var selectedPackage = null;
  var variants = [];
  for (var i = allPackages.length - 1; i >= 0; i--) {
    if (allPackages[i].id == packageId) {
      selectedPackage = allPackages[i];
      break;
    }
  }
  var variantId = $('#variant-' + packageId).val();
  if (selectedPackage !== null) {
    if (selectedPackage.duration) {
      for (var i = selectedPackage.duration.length - 1; i >= 0; i--) {
        if (selectedPackage.duration[i].id === variantId) {
          variants = selectedPackage.duration[i].variants;
          break;
        }
      }
      for (var i = variants.length - 1; i >= 0; i--) {
        if (variants[i].id === subVariantId) {
          var priceEl = $('#price-' + packageId)
          priceEl.html('Rs. ' + variants[i].taxedPrice);
        }
      }
    }
    if (selectedPackage.sessions) {
      for (var i = selectedPackage.sessions.length - 1; i >= 0; i--) {
        if (selectedPackage.sessions[i].id === variantId) {
          variants = selectedPackage.sessions[i].variants
          break;
        }
      }
      for (var i = variants.length - 1; i >= 0; i--) {
        if (variants[i].id === subVariantId) {
          var priceEl = $('#price-' + packageId)
          priceEl.html('Rs. ' + variants[i].taxedPrice);
        }
      }
    }
    if (selectedPackage.batch) {
      for (var i = selectedPackage.batch.length - 1; i >= 0; i--) {
        if (selectedPackage.batch[i].id === variantId) {
          variants = selectedPackage.batch[i].variants
          break;
        }
      }
      for (var i = variants.length - 1; i >= 0; i--) {
        if (variants[i].id === subVariantId) {
          var priceEl = $('#price-' + packageId)
          priceEl.html('Rs. ' + variants[i].taxedPrice);
        }
      }
    }
  }
}

function bookNow(btn) {
  var packageId = $(btn).attr('data-package-id');
  var selectedPackage = findSelectedPackage(packageId);
  if (selectedPackage != null) {
    userSelectedPackage = selectedPackage;
    if (selectedPackage.type !== 'batch') {
      var subVariant = $('#subvariant-' + packageId);
      var displayText = $('option:selected', subVariant).attr('data-dislay');
      var variantId = $('option:selected', subVariant).attr('data-variant-id');
      var subVariantId = $('option:selected', subVariant).attr('data-subvariant-id');
      var subVariant = getSubVariant(selectedPackage, variantId, subVariantId);
      selectedSubVariant = subVariant;
      var endDate = moment().add(subVariant.duration.value, subVariant.duration.unit).format('D/M/YYYY');
      $('#start-date-container').removeClass('hide');
      $('#batch-start-date-container').addClass('hide');
      $('#modal_package_name').html(selectedPackage.name);
      $('#modal_package_details').html(displayText);
      $('#modal_price').html('Rs. ' + subVariant.taxedPrice);
      $('#buy_modal').modal('show');
      $('#start-date').val(moment().add(1, 'days').format('D/M/YYYY'));
      $('#end-date').html(endDate);
      selectedStartDate = moment().add(1, 'days').toDate();
      selectedEndDate = endDate;
    } else if (selectedPackage.type === 'batch' && selectedPackage.batch) {
      console.log(selectedPackage);
      var subVariant = $('#subvariant-' + packageId);
      var displayText = $('option:selected', subVariant).attr('data-dislay');
      var variantId = $('option:selected', subVariant).attr('data-variant-id');
      var subVariantId = $('option:selected', subVariant).attr('data-subvariant-id');
      var subVariant = getSubVariant(selectedPackage, variantId, subVariantId);
      selectedSubVariant = subVariant;
      $('#start-date-container').addClass('hide');
      $('#batch-start-date-container').removeClass('hide');
      $('#modal_package_name').html(selectedPackage.name);
      $('#modal_package_details_container').addClass('hide');
      $('#modal_price').html('Rs. ' + selectedPackage.batch.taxedPrice);
      $('#buy_modal').modal('show');
      $('#batch-start-date').html(moment.unix(subVariant.startDate / 1000).format('D/M/YYYY'));
      $('#end-date').html(moment.unix(subVariant.endDate / 1000).format('D/M/YYYY'));
      selectedStartDate = subVariant.startDate;
      selectedEndDate = subVariant.endDate;
    }
  }
}

function processRzResponse(response) {
  console.log(response);
  $('#spinner').removeClass('hide');
  var protocol = 'http://';
  if (location.protocol === "https:") protocol = "https://";
  $.ajax({
    url: protocol + window.serverUrl + '/api/v1/web/payment',
    type: 'post',
    dataType: 'json',
    headers: {
      'X-Auth-Token': window.accountId + ':' + window.centerId,
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
    data: JSON.stringify({
      'orderId': orderId,
      'transactionId': response.razorpay_payment_id
    }),
    cache: false,
    success: function (data) {
      console.info(data);
      if (data.status) {
        $('#success_msg').html('Your payment is successful, you will receive SMS and email invoice shortly, use ' + orderId + ' for any future assitance');
        $('#success_modal').modal('show');
      } else {
        error_msg
        $('#error_msg').html('Failed to receive response from server, use ' + orderId + ' for any future assitance');
        $('#error_modal').modal('show');
      }
      $('#spinner').addClass('hide');
    },
    error: function(data) {
      console.info(data);
      $('#error_msg').html('Failed to receive response from server, use ' + orderId + ' for any future assitance');
      $('#error_modal').modal('show');
      $('#spinner').addClass('hide');
    }
  });
}

function makeRazorpay(userInfo, amount, orderId) {
  var options = {
    name: window.profileName,
    key:window.rzKey,
    description: userSelectedPackage.name,
    amount: amount*100,
    buttonText:'Pay',
    currency:'INR',
    email: userInfo.email,
    theme: {color:'#e9452f'},
    prefill: { name: userInfo.name, email: userInfo.email,'contact': userInfo.phone },
    notes: { orderId: orderId, accountId: window.accountId, centerId: window.centerId },
    handler: function (response){
      processRzResponse(response);
    }
  };
  console.log(options);
  var rzp1 = new Razorpay(options);
  rzp1.open();
}

function makePayment(btn) {
  var userObj = {
    name: $('#name').val(),
    phone: $('#phone').val(),
    email: $('#email').val(),
    gender: $('input[name=gender]:checked').val(),
  };

  if (!userObj.name || userObj.name.length < 3) {
    $('#name-id').removeClass('hide');
    return;
  } else {
    $('#name-id').addClass('hide');
  }

  if (!userObj.phone || userObj.phone.toString().length !== 10) {
    $('#phone-id').removeClass('hide');
    return;
  } else {
    $('#phone-id').addClass('hide');
  }

  if (!userObj.email || userObj.email.length < 3) {
    $('#email-id').removeClass('hide');
    return;
  } else {
    $('#email-id').addClass('hide');
  }

  if (!userObj.gender || userObj.gender.length < 2) {
    $('#gender-id').removeClass('hide');
    return;
  } else {
    $('#gender-id').addClass('hide');
  }
  $('#spinner').removeClass('hide');
  if (userSelectedPackage && userSelectedPackage.type !== 'batch') {
    var subVariant = $('#variant-' + userSelectedPackage.id);
    var variantId = $('option:selected', subVariant).attr('data-variant-id');

    userObj.package = {
      id: userSelectedPackage.id,
      variantId: selectedSubVariant.id,
      startDate: moment(selectedStartDate).unix() * 1000,
      endDate: moment(selectedEndDate, "D/M/YYYY").unix() * 1000,
      amount: selectedSubVariant.taxedPrice
    }
  } else if (userSelectedPackage && userSelectedPackage.type === 'batch') {
    userObj.package = {
      id: userSelectedPackage.id,
      variantId: selectedSubVariant.id,
      startDate: selectedStartDate,
      endDate: selectedEndDate,
      amount: selectedSubVariant.taxedPrice
    }
    // userObj.package = {
    //   id: userSelectedPackage.id,
    //   variantId: userSelectedPackage.batch.id,
    //   startDate: selectedStartDate,
    //   endDate: selectedEndDate,
    //   amount: userSelectedPackage.batch.taxedPrice
    // }
  }

  userObj.phone = '+91' + userObj.phone
  console.log(userObj);

  var protocol = 'http://';
  if (location.protocol === "https:") protocol = "https://";
  $.ajax({
    url: protocol + window.serverUrl + '/api/v1/web/order',
    type: 'post',
    dataType: 'json',
    headers: {
      'X-Auth-Token': window.accountId + ':' + window.centerId,
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    },
    data: JSON.stringify(userObj),
    cache: false,
    success: function (data) {
      $('#spinner').addClass('hide');
      if (data.status) {
        orderId = data.orderId;
        $('#buy_modal').modal('hide');
        makeRazorpay(userObj, userObj.package.amount, orderId)
        console.info(data);
      } else {

      }
    },
    error: function(data) {
      console.info(data);
      $('#error_msg').html('Failed to receive response from server, please try again');
      $('#error_modal').modal('show');
      $('#spinner').addClass('hide');
    }
  });
}

function cancelModal(btn) {
  $('#buy_modal').modal('hide');
}

scrollPackagesLeft = function() {
    console.log('scrollegt')
    var leftPos = $('#packageslist').scrollLeft();
    $("#packageslist").animate({ scrollLeft: leftPos - 200 }, 800);
}

scrollPackagesRight = function() {
    var leftPos = $('#packageslist').scrollLeft();
    $("#packageslist").animate({ scrollLeft: leftPos + 200 }, 800);
}
function checkWidth() {
  var $window = $(window);
  var windowsize = $window.width();
  windowsize = $window.width();
  if (windowsize < 754) {
    $("ul.nav.navbar-nav").removeClass('pull-right')
    $("ul.nav.navbar-nav").addClass('pull-left')
    $("#navbar").css('padding-bottom', '10px');
  } else {
    $("ul.nav.navbar-nav").addClass('pull-right')
  }
}

function initCalendar(openHours) {
  $('#calendar').fullCalendar({
    header: {
        left: 'prev,next today',
        center: 'title',
        right: 'month,agendaWeek,agendaDay'
    },
    defaultView: 'agendaDay',
    nowIndicator: true
    // businessHours: openHours
  });
}

function init() {
  allPackages = window.serverpackages;
  $('#start-date-grp').datepicker({
    format: 'dd/mm/yyyy',
    startDate: '1d'
  }).on('changeDate', function(e) {
    var endDate = moment(e.date).add(selectedSubVariant.duration.value, selectedSubVariant.duration.unit).subtract(1, 'days').format('D/M/YYYY');
    selectedStartDate = e.date;
    selectedEndDate = endDate;
    $('#end-date').html(endDate);
  });
  var currentWidth = checkWidth();
  $(window).resize(currentWidth);
  initCalendar();
   lightbox.option({
      'resizeDuration': 200,
      'wrapAround': true
    })
  $('#calendar').fullCalendar('addEventSource', {
    events: function(start, end, timezone, callback) {
    var fromDate = start.format('YYYY-MM-DD');
    var toDate = end.format('YYYY-MM-DD');
    $.getJSON("/controllers?fromDate=" + fromDate + '&toDate=' + toDate + '&center=' + window.centerId, function(data) {
      var mappedEvents = _.map(data.events, function(event) {
        var eve = {
            id: event.id,
            title: event.title,
            start: new Date(event.start),
        };
        if (event.end) {
            eve.end = new Date(event.end);
        }
        if (event.color) {
            eve.color = event.color;
        }
        return eve;
      }); 
      $('#calendar').fullCalendar({
        events: mappedEvents
      });
      callback(mappedEvents);
    });
    }
});
}

$(document).ready(function() {
  init();
});